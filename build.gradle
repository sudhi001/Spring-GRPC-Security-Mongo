import java.time.OffsetDateTime
import java.time.format.DateTimeFormatter
buildscript {
    repositories {
        maven {
            url 'https://plugins.gradle.org/m2/'
        }
    }
    ext {
        springBootVersion = '2.3.7.RELEASE'
        grpcVersion = '1.34.1'
        protobufVersion = '3.14.0'
        protobufGradlePluginVersion = '0.8.12'
        springSecurityOAuthVersion = '2.5.0.RELEASE'
        springBootGrpcVersion='2.10.1.RELEASE'
        lombokPluginVersion = '4.0.0'
        versioningPluginVersion = '2.14.0'
        versionsPluginVersion = '0.29.0'
    }
}
plugins {
    id 'java'
    id 'java-library'
    id 'org.springframework.boot' version '2.3.7.RELEASE' apply false
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
    id 'net.nemerosa.versioning' version '2.14.0'
    id 'com.google.protobuf' version '0.8.14'
}
wrapper {
    gradleVersion = '6.7.1'
}
def buildTimeAndDate = OffsetDateTime.now()
ext {
    buildDate = DateTimeFormatter.ISO_LOCAL_DATE.format(buildTimeAndDate)
    buildTime = DateTimeFormatter.ofPattern('HH:mm:ss.SSSZ').format(buildTimeAndDate)
    buildRevision = versioning.info.commit
}
allprojects {
    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'io.spring.dependency-management'
    compileJava {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
        options.encoding = 'UTF-8'
    }



    repositories {
        mavenCentral()
        jcenter()
    }

    buildscript {
        repositories {
            maven { url 'https://plugins.gradle.org/m2/' }
        }
    }
}


allprojects { project ->
    buildscript {
        dependencyManagement {
            imports {
                mavenBom "org.springframework.boot:spring-boot-starter-parent:${springBootVersion}"
                mavenBom "com.google.protobuf:protobuf-bom:${protobufVersion}"
                mavenBom "io.grpc:grpc-bom:${grpcVersion}"
            }
        }
    }




}
